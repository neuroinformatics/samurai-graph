package jp.riken.brain.ni.samuraigraph.application;

import java.awt.Color;

import javax.swing.SwingUtilities;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 * A panel displaying error messages for HDF5 file.
 *
 */
public class SGHDF5ErrorMessagePanel extends javax.swing.JPanel {

	private static final long serialVersionUID = 7906223862554921571L;
	
	/** Creates new form SGHDF5ErrorMessagePanel */
    public SGHDF5ErrorMessagePanel(final String msg, final String path) {
    	super();
        initComponents();
        
		char[] cArray = SGApplicationUtility.getUnacceptableCharacterHDF5Win(path);
		final String[] errCharStrArray = new String[cArray.length];
		for (int ii = 0; ii < cArray.length; ii++) {
			errCharStrArray[ii] = Character.toString(cArray[ii]);
		}

		Color bg = this.getBackground();
		this.mMessageTextArea.setBackground(bg);
		this.mMessageTextArea.setText(msg);
		this.mFilePathTextPane.setBackground(bg);
		this.mFilePathTextPane.setText(path);

		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				StyledDocument doc = (StyledDocument) mFilePathTextPane.getDocument();
				SimpleAttributeSet plane = new SimpleAttributeSet();
				doc.setCharacterAttributes(0, path.length(), plane, true);
				SimpleAttributeSet attr = new SimpleAttributeSet();
				StyleConstants.setBackground(attr, Color.YELLOW);
				for (int ii = 0; ii < errCharStrArray.length; ii++) {
					String keyword = errCharStrArray[ii];
					int pos = path.indexOf(keyword);
					while (pos != -1) {
						doc.setCharacterAttributes(pos, keyword.length(),
								attr, true);
						pos = path.indexOf(keyword, pos + keyword.length());
					}
				}
			}
		});

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mMessageTextArea = new javax.swing.JTextArea();
        mFilePathScrollPane = new javax.swing.JScrollPane();
        mFilePathTextPane = new javax.swing.JTextPane();

        setLayout(new java.awt.GridBagLayout());

        mMessageTextArea.setColumns(20);
        mMessageTextArea.setEditable(false);
        mMessageTextArea.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        mMessageTextArea.setLineWrap(true);
        mMessageTextArea.setRows(3);
        mMessageTextArea.setWrapStyleWord(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(mMessageTextArea, gridBagConstraints);

        mFilePathScrollPane.setPreferredSize(new java.awt.Dimension(300, 100));

        mFilePathTextPane.setEditable(false);
        mFilePathTextPane.setFont(new java.awt.Font("Dialog", 0, 12));
        mFilePathScrollPane.setViewportView(mFilePathTextPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(mFilePathScrollPane, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane mFilePathScrollPane;
    private javax.swing.JTextPane mFilePathTextPane;
    private javax.swing.JTextArea mMessageTextArea;
    // End of variables declaration//GEN-END:variables
}
