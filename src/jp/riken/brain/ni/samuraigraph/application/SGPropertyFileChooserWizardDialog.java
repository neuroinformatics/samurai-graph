package jp.riken.brain.ni.samuraigraph.application;

import javax.swing.JButton;
import javax.swing.text.JTextComponent;

/**
 * A dialog with the file chooser to select the property file.
 * 
 */
public class SGPropertyFileChooserWizardDialog extends SGSingleFileChooserWizardDialog {

    /**
     * Serial Version UID.
     */
    private static final long serialVersionUID = -3266451892381411392L;

    /**
     * The title of this dialog.
     */
    public static final String TITLE = "Property File";

    /** Creates new form SGPropertyFileChooserWizardDialog */
    public SGPropertyFileChooserWizardDialog(java.awt.Frame parent,
            boolean modal) {
        super(parent, modal);
        initComponents();
        this.initProperty();
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        mPanel = new javax.swing.JPanel();
        mDataFileNameTextField = new jp.riken.brain.ni.samuraigraph.base.SGTextField();
        mShowFileChooserButton = new jp.riken.brain.ni.samuraigraph.base.SGButton();
        mButtonPanel = new javax.swing.JPanel();
        mPreviousButton = new jp.riken.brain.ni.samuraigraph.base.SGButton();
        mNextButton = new jp.riken.brain.ni.samuraigraph.base.SGButton();
        mOKButton = new jp.riken.brain.ni.samuraigraph.base.SGButton();
        mCancelButton = new jp.riken.brain.ni.samuraigraph.base.SGButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        mPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select the Property File", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N
        mPanel.setLayout(new java.awt.GridBagLayout());

        mDataFileNameTextField.setFont(new java.awt.Font("Dialog", 0, 12));
        mDataFileNameTextField.setPreferredSize(new java.awt.Dimension(250, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 10, 5);
        mPanel.add(mDataFileNameTextField, gridBagConstraints);

        mShowFileChooserButton.setText("Browse");
        mShowFileChooserButton.setActionCommand("Choose");
        mShowFileChooserButton.setFont(new java.awt.Font("Dialog", 1, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 10, 10);
        mPanel.add(mShowFileChooserButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        getContentPane().add(mPanel, gridBagConstraints);

        mPreviousButton.setText("<Prev");
        mPreviousButton.setFont(new java.awt.Font("Dialog", 1, 12));
        mButtonPanel.add(mPreviousButton);

        mNextButton.setText("Next>");
        mNextButton.setFont(new java.awt.Font("Dialog", 1, 12));
        mButtonPanel.add(mNextButton);

        mOKButton.setText("OK");
        mOKButton.setFont(new java.awt.Font("Dialog", 1, 12));
        mButtonPanel.add(mOKButton);

        mCancelButton.setText("Cancel");
        mCancelButton.setFont(new java.awt.Font("Dialog", 1, 12));
        mButtonPanel.add(mCancelButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(mButtonPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel mButtonPanel;
    private jp.riken.brain.ni.samuraigraph.base.SGButton mCancelButton;
    private jp.riken.brain.ni.samuraigraph.base.SGTextField mDataFileNameTextField;
    private jp.riken.brain.ni.samuraigraph.base.SGButton mNextButton;
    private jp.riken.brain.ni.samuraigraph.base.SGButton mOKButton;
    private javax.swing.JPanel mPanel;
    private jp.riken.brain.ni.samuraigraph.base.SGButton mPreviousButton;
    private jp.riken.brain.ni.samuraigraph.base.SGButton mShowFileChooserButton;
    // End of variables declaration//GEN-END:variables


    /**
     * Initialize this dialog.
     */
    private void initProperty() {

        // set the title
        this.setTitle(SGPropertyFileChooserWizardDialog.TITLE);
        
        // add an action event listener
        this.mDataFileNameTextField.addActionListener(this);
    }

    protected JButton getPreviousButton() {
        return this.mPreviousButton;
    }

    protected JButton getNextButton() {
        return this.mNextButton;
    }

    protected JButton getOKButton() {
        return this.mOKButton;
    }

    protected JButton getCancelButton() {
        return this.mCancelButton;
    }
    
    protected JTextComponent getFileNameTextComponent() {
        return this.mDataFileNameTextField;
    }
    
    protected JButton getFileChooserButton() {
        return this.mShowFileChooserButton;
    }
    
}
